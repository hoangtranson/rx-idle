{"version":3,"file":"rx-idle.js.map","sources":["ng://rx-idle/lib/rx-idle.config.ts","ng://rx-idle/lib/rx-idle.service.ts","ng://rx-idle/lib/rx-idle.module.ts"],"sourcesContent":["export class RxIdleConfig {\r\n    /**\r\n     * Idle value in seconds.\r\n     */\r\n    idle: number;\r\n    /**\r\n     * Timeout value in seconds.\r\n     */\r\n    timeout: number;\r\n    /**\r\n     * Ping value in seconds.\r\n     */\r\n    ping: number;\r\n}","import { Injectable, Optional, NgZone } from '@angular/core';\nimport { RxIdleConfig } from './rx-idle.config';\n\nimport {\n  Observable,\n  Subject,\n  Subscription,\n  merge,\n  fromEvent,\n  from,\n  interval,\n  timer,\n  of\n} from 'rxjs';\nimport {\n  bufferTime,\n  distinctUntilChanged,\n  filter,\n  finalize,\n  map,\n  scan,\n  switchMap,\n  take,\n  takeUntil,\n  tap\n} from 'rxjs/operators';\n\nenum MINUTES {\n  TWO = 120,\n  FIVE = 300,\n  TEN = 600\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RxIdleService {\n\n  private ping$: Observable<any>;\n  private activityEvents$: Observable<any>;\n  private idle$: Observable<any>;\n  private timer$: Observable<any>;\n\n  private timerStart$ = new Subject<boolean>();\n  private timeout$ = new Subject<boolean>();\n\n  private idleSubscription: Subscription;\n\n  private idle = MINUTES.TEN;\n  private timeout = MINUTES.FIVE;\n  private ping = MINUTES.TWO;\n\n  private isInactivityTimer: boolean;\n  private isIdleDetected: boolean;\n  private isTimeout: boolean;\n\n  constructor(@Optional() config: RxIdleConfig, private _ngZone: NgZone) {\n    if (config) {\n      this.idle = config.idle;\n      this.timeout = config.timeout;\n      this.ping = config.ping;\n    }\n  }\n\n  /**\n   * Start watching for user idle and setup timer and ping.\n   */\n  startWatching() {\n    this.activityEvents$ = merge(\n      fromEvent(window, 'mousemove'),\n      fromEvent(window, 'resize'),\n      fromEvent(document, 'keydown')\n    );\n\n    this.idle$ = from(this.activityEvents$);\n\n    if (this.idleSubscription) {\n      this.idleSubscription.unsubscribe();\n    }\n\n    this.idleSubscription = this.idle$\n      .pipe(\n        bufferTime(500), // Starting point of detecting of user's inactivity\n        filter(\n          arr => !arr.length && !this.isIdleDetected && !this.isInactivityTimer\n        ),\n        tap(() => (this.isIdleDetected = true)),\n        switchMap(() =>\n          this._ngZone.runOutsideAngular(() =>\n            interval(1000).pipe(\n              takeUntil(\n                merge(\n                  this.activityEvents$,\n                  timer(this.idle * 1000).pipe(\n                    tap(() => {\n                      this.isInactivityTimer = true;\n                      this.timerStart$.next(true);\n                    })\n                  )\n                )\n              ),\n              finalize(() => (this.isIdleDetected = false))\n            )\n          )\n        )\n      )\n      .subscribe();\n\n    this.setupTimer(this.timeout);\n    this.setPing(this.ping);\n  }\n\n  /**\n   * Stop watching idle\n   */\n  stopWatching() {\n    this.stopTimer();\n    if (this.idleSubscription) {\n      this.idleSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Stop timer\n   */\n  stopTimer() {\n    this.isInactivityTimer = false;\n    this.timerStart$.next(false);\n  }\n\n  /**\n   * Reset timer\n   */\n  resetTimer() {\n    this.stopTimer();\n    this.isTimeout = false;\n  }\n\n  /**\n   * Return observable for timer's countdown number that emits after idle.\n   */\n  onTimerStart(): Observable<number> {\n    return this.timerStart$.pipe(\n      distinctUntilChanged(),\n      switchMap(start => (start ? this.timer$ : of(null)))\n    );\n  }\n\n  /**\n   * Return observable for timeout is fired.\n   */\n  onTimeout(): Observable<boolean> {\n    return this.timeout$.pipe(\n      filter(timeout => !!timeout),\n      tap(() => (this.isTimeout = true)),\n      map(() => true)\n    );\n  }\n\n  /**\n   * Get current configuration\n   */\n  getConfigValue(): RxIdleConfig {\n    return {\n      idle: this.idle,\n      timeout: this.timeout,\n      ping: this.ping\n    };\n  }\n\n  /**\n   * Set config values.\n   * @param config\n   */\n  setConfigValues(config: RxIdleConfig) {\n    if (this.idleSubscription && !this.idleSubscription.closed) {\n      console.error('Call stopWatching() before set config values');\n      return;\n    }\n\n    if (config.idle) {\n      this.idle = config.idle;\n    }\n    if (config.ping) {\n      this.ping = config.ping;\n    }\n    if (config.timeout) {\n      this.timeout = config.timeout;\n    }\n  }\n\n  /**\n   * Set custom activity events\n   *\n   * @param customEvents Example: merge(\n   *   fromEvent(window, 'mousemove'),\n   *   fromEvent(window, 'resize'),\n   *   fromEvent(document, 'keydown'),\n   *   fromEvent(document, 'touchstart'),\n   *   fromEvent(document, 'touchend')\n   * )\n   */\n  setCustomActivityEvents(customEvents: Observable<any>) {\n    if (this.idleSubscription && !this.idleSubscription.closed) {\n      console.error('Call stopWatching() before set custom activity events');\n      return;\n    }\n\n    this.activityEvents$ = customEvents;\n  }\n\n  /**\n   * Setup timer.\n   *\n   * Counts every seconds and return n+1 and fire timeout for last count.\n   * @param timeout Timeout in seconds.\n   */\n  private setupTimer(timeout: number) {\n    this._ngZone.runOutsideAngular(() => {\n      this.timer$ = interval(1000).pipe(\n        take(timeout),\n        map(() => 1),\n        scan((acc, n) => acc + n),\n        tap(count => {\n          if (count === timeout) {\n            this.timeout$.next(true);\n          }\n        })\n      );\n    });\n  }\n\n  /**\n   * Setup ping.\n   *\n   * Pings every ping-seconds only if is not timeout.\n   * @param ping\n   */\n  private setPing(ping: number) {\n    this.ping$ = interval(ping * 1000).pipe(filter(() => !this.isTimeout));\n  }\n\n  getPing(){\n    return this.ping$;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { RxIdleConfig } from './rx-idle.config';\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: []\n})\nexport class RxIdleModule { \n  static forRoot(config: RxIdleConfig): ModuleWithProviders {\n    return {\n      ngModule: RxIdleModule,\n      providers: [\n        {provide: RxIdleConfig, useValue: config}\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
